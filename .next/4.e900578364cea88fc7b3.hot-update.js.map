{"version":3,"file":"4.e900578364cea88fc7b3.hot-update.js","sources":["webpack:///components/Prices.js"],"sourcesContent":["class Prices extends React.Component {\n    state = {\n        currency: 'USD'\n    }\n    render() {\n        let list = '';\n        if(this.state.currency === 'USD') {\n            list = <li className=\"list-group-item\">\n            Bitcoin rate for {this.props.bpi.USD.description}: <span className=\"badge badge-primary\">{this.props.bpi.USD.code}</span>&nbsp;<strong>{this.props.bpi.USD.rate}</strong>\n            </li>\n        } else if(this.state.currency === 'GBP') {\n            list = <li className=\"list-group-item\">\n            Bitcoin rate for {this.props.bpi.GBP.description}: <span className=\"badge badge-primary\">{this.props.bpi.GBP.code}</span>&nbsp;<strong>{this.props.bpi.GBP.rate}</strong>\n            </li>\n        } else if(this.state.currency === 'EUR') {\n            list = <li className=\"list-group-item\">\n            Bitcoin rate for {this.props.bpi.EUR.description}: <span className=\"badge badge-primary\">{this.props.bpi.EUR.code}</span>&nbsp;<strong>{this.props.bpi.EUR.rate}</strong>\n            </li>\n        }\n\n        return (\n            <div>\n                <ul className=\"list-group\">\n                    {list}\n                </ul>\n                <br />\n                <select onChange={e => this.setState({currency: e.target.value})} className=\"form-control\">\n                <option value=\"USD\">USD</option>\n                <option value=\"GBP\">GBP</option>\n                <option value=\"EUR\">EUR</option>\n                </select> \n            </div>\n        );\n    }\n}\n\nexport default Prices;\n\n\n// WEBPACK FOOTER //\n// components/Prices.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;;;;;;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;AAjCA;AACA;AAmCA;AAAA;;;;;;;;;;;;AApCA;;;;;;;;;;A","sourceRoot":""}